package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.30

import (
	"context"
	"errors"
	"go-app/graph/model"
)

// CreateProfile is the resolver for the createProfile field.
func (r *mutationResolver) CreateProfile(ctx context.Context, input model.ProfileInput) (*model.Profile, error) {
	// データベースにユーザープロファイルを保存するロジックを実装。
	// ここではダミーデータを使用。
	profile := &model.Profile{
		ID:     "2",
		UserID: "1",
		Hobby:  "soccer",
	}

	return profile, nil
}

// Profile is the resolver for the profile field.
func (r *queryResolver) Profile(ctx context.Context, userID string) (*model.Profile, error) {
	// データベースからユーザープロファイルを取得するロジックを実装。
	// とりあえずダミーデータ返す
	profile := &model.Profile{
		ID:     "1",
		UserID: "1",
		Hobby:  "ゲーム",
	}

	if profile.UserID == userID {
		return profile, nil
	}

	return nil, errors.New("profile not found")
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
